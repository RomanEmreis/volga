[package]
name = "volga"
version = "0.5.3"
edition = "2021"
rust-version = "1.80.0"
authors = ["Roman Emreis <roman.emreis@outlook.com>"]
license = "MIT"
repository = "https://github.com/RomanEmreis/volga"
description = "Easy & Fast Web Framework for Rust"
documentation = "https://docs.rs/volga"
readme = "README.md"
homepage = "https://romanemreis.github.io/volga-docs"
categories = ["web-programming::http-server"]
keywords = ["volga", "server", "http", "web", "framework"]

[dependencies]
# required
bytes = "1.10.0"
futures-util = { version = "0.3.31", default-features = false, features = ["alloc"] }
http-body-util = "0.1.2"
itoa = "1.0.14"
mime = "0.3.17"
mime_guess = "2.0.5"
pin-project-lite = "0.2.16"
tokio = { version = "1.43.0", features = ["full"] }
tokio-util = "0.7.13"
serde = "1.0.217"
serde_json = "1.0.138"
serde_urlencoded = "0.7.1"

# optional
async-compression = { version = "0.4.18", features = ["tokio"], optional = true }
base64 = { version = "0.22.1", optional = true }
chrono = { version = "0.4.39", optional = true }
handlebars = { version = "6.3.1", optional = true }
httpdate = { version = "1.0.3", optional = true }
hyper = { version = "1.6.0", features = ["server"], optional = true }
hyper-util = { version = "0.1.10", features = ["server", "server-auto", "server-graceful", "service", "tokio"], optional = true }
multer = { version = "3.1.0", optional = true }
sha1 = { version = "0.10.6", optional = true }
tokio-rustls = { version = "0.26.1", default-features = false, features = ["tls12", "ring"], optional = true }
tokio-tungstenite = { version = "0.26.1", optional = true }
tracing = { version = "0.1.41", default-features = false, optional = true }

[dev-dependencies]
reqwest = { version = "0.12.12", features = ["blocking", "json", "http2", "brotli", "deflate", "gzip", "zstd", "native-tls"] }
serde = { version = "1.0.217", features = ["derive"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
uuid = { version = "1.13.1", features = ["v4"] }
criterion = { version = "0.5.1", features = ["async_tokio"] }

[features]
# Default HTTP/1 only server
default = ["http1"]
# HTTP/1 and HTTP/2 server
full = [
    "http1", 
    "http2",
    "middleware", 
    "di",
    "tls",
    "tracing",
    "multipart",
    "problem-details",
    "static-files",
    "compression-full", 
    "decompression-full",
    "ws"
]

http1 = ["dep:hyper", "hyper?/http1", "dep:hyper-util", "hyper-util?/http1", "dep:httpdate"]
http2 = ["dep:hyper", "hyper?/http2", "dep:hyper-util", "hyper-util?/http2", "dep:httpdate"]

di = []
middleware = []
multipart = ["dep:multer"]
problem-details = []
static-files = ["dep:chrono", "dep:handlebars", "dep:sha1"]
tls = ["middleware", "dep:tokio-rustls", "tokio-rustls?/tls12", "tokio-rustls?/ring"]
tracing = ["middleware", "dep:tracing"]
ws = ["dep:sha1", "dep:base64", "dep:tokio-tungstenite"]

compression-full = ["compression-brotli", "compression-gzip", "compression-zstd"]
compression-brotli = ["middleware", "async-compression/brotli"]
compression-gzip = ["middleware", "async-compression/zlib", "async-compression/gzip"]
compression-zstd = ["middleware", "async-compression/zstd"]

decompression-full = ["decompression-brotli", "decompression-gzip", "decompression-zstd"]
decompression-brotli = ["middleware", "async-compression/brotli"]
decompression-gzip = ["middleware", "async-compression/zlib", "async-compression/gzip"]
decompression-zstd = ["middleware", "async-compression/zstd"]

[package.metadata.docs.rs]
all-features = true

[[bench]]
name = "server"
harness = false

[[test]]
name = "middleware_mapping_tests"
required-features = ["middleware"]

[[test]]
name = "compression"
required-features = ["compression-full"]

[[test]]
name = "decompression"
required-features = ["decompression-full"]

[[test]]
name = "tls"
required-features = ["tls"]

[[example]]
name = "hello_world"
path = "examples/hello_world.rs"

[[example]]
name = "middleware"
path = "examples/middleware.rs"
required-features = ["middleware"]

[[example]]
name = "query_params"
path = "examples/query_params.rs"

[[example]]
name = "route_params"
path = "examples/route_params.rs"

[[example]]
name = "json"
path = "examples/json.rs"

[[example]]
name = "form"
path = "examples/form.rs"

[[example]]
name = "headers"
path = "examples/headers.rs"

[[example]]
name = "head_request"
path = "examples/head_request.rs"

[[example]]
name = "options_request"
path = "examples/options_request.rs"

[[example]]
name = "custom_request_headers"
path = "examples/custom_request_headers.rs"
required-features = ["middleware"]

[[example]]
name = "file_download"
path = "examples/file_download.rs"

[[example]]
name = "file_upload"
path = "examples/file_upload.rs"

[[example]]
name = "long_running_task"
path = "examples/long_running_task.rs"

[[example]]
name = "http_request_handler"
path = "examples/http_request_handler.rs"

[[example]]
name = "trace_request"
path = "examples/trace_request.rs"
required-features = ["tracing"]

[[example]]
name = "dependency_injection"
path = "examples/dependency_injection.rs"
required-features = ["middleware", "di"]

[[example]]
name = "route_groups"
path = "examples/route_groups.rs"

[[example]]
name = "compression"
path = "examples/compression.rs"
required-features = ["compression-full"]

[[example]]
name = "decompression"
path = "examples/decompression.rs"
required-features = ["decompression-full"]

[[example]]
name = "multipart"
path = "examples/multipart.rs"
required-features = ["multipart"]

[[example]]
name = "tls"
path = "examples/tls.rs"
required-features = ["tls"]

[[example]]
name = "tracing"
path = "examples/tracing.rs"
required-features = ["tracing"]

[[example]]
name = "global_error_handler"
path = "examples/global_error_handler.rs"
required-features = ["tracing", "problem-details"]

[[example]]
name = "global_404_handler"
path = "examples/global_404_handler.rs"
required-features = ["tracing"]

[[example]]
name = "static_files"
path = "examples/static_files.rs"
required-features = ["tracing","static-files"]

[[example]]
name = "websockets"
path = "examples/websockets.rs"
required-features = ["ws","tracing"]
